{% extends 'PimEnrichBundle::layout.html.twig' %}
{% import 'PimDataGridBundle::macros.html.twig' as dataGrid %}

{% oro_title_set({ params: {"%job.label%": form.vars.value.label } }) %}

{% set actionRoute = path('pim_importexport_export_profile_edit', { 'id': form.vars.value.id }) %}

{% set entityName = 'export profile' %}
{% set title = 'export profile.edit'|trans ~ ' - ' ~ form.vars.value.label %}

{% set indexRoute = path('pim_importexport_export_profile_index') %}
{% if form.vars.value.id %}
    {% set removeAcl = 'pim_importexport_export_profile_remove' %}
    {% set removeRoute = path('pim_importexport_export_profile_remove', { 'id': form.vars.value.id }) %}
    {% set importRoute = path('pim_importexport_export_profile_index') %}
    {% set removeMessage = 'confirmation.remove.export profile'|trans({ '%name%': form.vars.value.label }) %}
    {% set removeSuccessMessage = 'flash.export.removed'|trans %}
{% endif %}

{% block content %}

    {% if form.permissions is defined %}
        <script type="text/javascript">
            require(
                ['jquery', 'pimee/manage-permissions'],
                function ($, managePermissions) {
                    'use strict';

                    $(function () {
                        var options = {
                            elementId: '#{{form.permissions.vars.id}}',
                            changeBlockLabel: '{{ 'Changes'|trans }}',
                            grantMessage: 'permission-changes.job profile.grant',
                            revokeMessage: 'permission-changes.job profile.revoke',
                            update: {
                                add: {
                                    '{{ form.permissions.edit.vars.id }}': ['{{ form.permissions.execute.vars.id }}']
                                },
                                remove: {
                                    '{{ form.permissions.execute.vars.id }}': ['{{ form.permissions.edit.vars.id }}'],
                                }
                            }
                        };
                        managePermissions(options);
                    });
                });
        </script>
    {% endif %}

    {{ JSFV(form) }}
    {{ form_start(form, {
        'action': actionRoute,
        'attr': {
            'data-updated-title': 'confirmation.leave'|trans,
            'data-updated-message': 'confirmation.discard changes'|trans({ '%entity%': entityName|trans })
        }
    }) }}

        {% set left %}
            <ul class="inline">
                <li>{{ 'Job'|trans }}: {{ jobInstance.job.name|trans }}</li>
                <li>{{ 'Connector'|trans }}: {{ jobInstance.connector|trans }}</li>
            </ul>
        {% endset %}

        {% set buttons %}
            {{ elements.backLink(indexRoute) }}
            {{ elements.deleteLink(removeRoute, removeAcl, indexRoute, removeMessage, removeSuccessMessage) }}
            {{ elements.submitBtn }}
        {% endset %}

        {{ elements.page_header(title, buttons, null, left, elements.updated(form.vars.id)) }}

        {{ elements.form_errors(form) }}

        {% set navbarTabs = ['General properties'] %}
        {% if form.permissions is defined %}
            {% set navbarTabs = navbarTabs|merge(['Permissions']) %}
        {% endif %}
        {% set navbarTabs = navbarTabs|merge(['History']) %}

        {{ elements.form_navbar(navbarTabs) }}

        <div class="row-fluid tab-content">
            <div class="tab-pane buffer-top active" id="general-properties">
                {% set properties %}
                    {{ form_row(form.code) }}
                    {{ form_row(form.label) }}
                {% endset %}
                {{ elements.accordion({ 'pane.accordion.properties': properties }, 1) }}

                {% set globalSettings %}
                    {% for step in form.job.steps %}
                        {% for child in step.children %}
                            {{ form_widget(child) }}
                        {% endfor %}
                    {% endfor %}
                {% endset %}
                {{ elements.accordion({ 'pane.accordion.global_settings': globalSettings }, 2) }}
            </div>

            {% if form.permissions is defined %}
            <div class="tab-pane buffer-top" id="permissions">
                {{ elements.accordion({ 'pane.accordion.permissions': form_widget(form.permissions) }) }}
            </div>
            {% endif %}

            <div class="tab-pane" id="history">
                {{ dataGrid.renderHistoryGrid(form.vars.value) }}
            </div>
        </div>

    {{ form_end(form) }}

    {{ include ('PimPrestashopConnectorBundle:Mapping:mapping-field.html.twig') }}

{% endblock %}
